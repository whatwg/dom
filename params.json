{
  "name": "Dom",
  "tagline": "DOM Standard",
  "body": "This repository hosts the [DOM Standard](https://dom.spec.whatwg.org/).\r\n\r\n### Code of conduct\r\n\r\nWe are committed to providing a friendly, safe and welcoming environment for all. Please read and\r\nrespect the [WHATWG Code of Conduct](https://wiki.whatwg.org/wiki/Code_of_Conduct).\r\n\r\n### Contribution opportunities\r\n\r\nFolks notice minor and larger issues with the DOM Standard all the time and we'd love your help\r\nfixing those. Pull requests for typographical and grammar errors are also most welcome.\r\n\r\nIssues labeled [\"good first bug\"](https://github.com/whatwg/dom/labels/good%20first%20bug) are a\r\ngood place to get a taste for editing the DOM Standard and providing a pull request.\r\n\r\nWe'd be happy to mentor you through this process. If you're interested and need help getting\r\nstarted, leave a comment on the issue or ask around [on IRC](https://wiki.whatwg.org/wiki/IRC).\r\n\r\n### Pull requests\r\n\r\nIn short, change `dom.bs` and submit your patch, with a\r\n[good commit message](https://github.com/erlang/otp/wiki/Writing-good-commit-messages). Consider\r\nreading through the [WHATWG FAQ](https://wiki.whatwg.org/wiki/FAQ) if you are new here.\r\n\r\nPlease add your name to the Acknowledgments section in your first pull request, even for trivial\r\nfixes. The names are sorted lexicographically.\r\n\r\nTo generate `dom.html`, [bikeshed](https://github.com/tabatkins/bikeshed) can be used. Do not worry\r\nif using that tool is too complicated; your pull request does not need to contain the generated HTML\r\nto be accepted. If you _do_ want to use it, the easiest way is probably via the HTTP API:\r\n\r\n```\r\ncurl https://api.csswg.org/bikeshed/ -f -F file=@dom.bs > dom.html\r\n```\r\n\r\n#### Formatting\r\n\r\nUse a column width of 100 characters.\r\n\r\nDo not use newlines inside \"inline\" elements, even if that means exceeding the column width\r\nrequirement.\r\n```html\r\n<p>The\r\n<dfn method for=DOMTokenList lt=remove(tokens)|remove()><code>remove(<var>tokens</var>&hellip;)</code></dfn>\r\nmethod, when invoked, must run these steps:\r\n```\r\nis okay and\r\n  ```html\r\n<p>The <dfn method for=DOMTokenList\r\nlt=remove(tokens)|remove()><code>remove(<var>tokens</var>&hellip;)</code></dfn> method, when\r\ninvoked, must run these steps:\r\n```\r\nis not.\r\n\r\nUsing newlines between \"inline\" element tag names and their content is also forbidden. (This\r\nactually alters the content, by adding spaces.) That is\r\n```html\r\n<a>token</a>\r\n```\r\nis fine and\r\n```html\r\n<a>token\r\n</a>\r\n```\r\nis not.\r\n\r\nAn `<li>` element always has a `<p>` element inside it, unless it's a child of `<ul class=brief>`.\r\n\r\nIf a \"block\" element contains a single \"block\" element, do not put it on a newline.\r\n\r\nDo not indent for anything except a new \"block\" element. For instance\r\n```html\r\n <li><p>For each <var>token</var> in <var>tokens</var>, in given order, that is not in\r\n <a>tokens</a>, append <var>token</var> to <a>tokens</a>.\r\n```\r\nis not indented, but\r\n```html\r\n<ol>\r\n <li>\r\n  <p>For each <var>token</var> in <var>tokens</var>, run these substeps:\r\n\r\n  <ol>\r\n   <li><p>If <var>token</var> is the empty string, <a>throw</a> a {{SyntaxError}} exception.\r\n```\r\nis.\r\n\r\nEnd tags may be included (if done consistently) and attributes may be quoted (using double quotes),\r\nthough the prevelant theme is to omit end tags and not quote attributes (unless they contain a\r\nspace).\r\n\r\n### Tests\r\n\r\nTests can be found in the `dom/` directory of\r\n[`w3c/web-platform-tests`](https://github.com/w3c/web-platform-tests).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}